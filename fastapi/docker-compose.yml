version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: tutoref_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ${PATH_TO_STORAGE}:/var/lib/postgresql/data:rw

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: tutoref_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "cluster.routing.allocation.disk.threshold_enabled=false"  # 暫時關閉磁碟閾值檢查
      - "cluster.routing.allocation.disk.watermark.low=95%" 
      - "cluster.routing.allocation.disk.watermark.high=98%"
      - "cluster.routing.allocation.disk.watermark.flood_stage=99%"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 1g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cat/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      context: .
    container_name: tutoref_app
    ports:
      - "8000:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ELASTICSEARCH_URL: http://elasticsearch:9200
    volumes:
      - .:/app
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  elasticsearch_data: